name: GCP Deploy Dev

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install dependencies
        uses: borales/actions-yarn@v4
        with:
          cmd: install
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Lint
        run: |
          yarn run lint
  upload:
    name: Upload Docker image
    uses: ./.github/workflows/upload-service.yml
    permissions:
      contents: read
      id-token: write
    with:
      tag: main:${{ github.sha }}
      APP_NAME: ${{ vars.APP_NAME }}
    secrets:
      GCP_PROJECT_CICD_ID: ${{ secrets.GCP_PROJECT_CICD_ID }}
      GCP_PROJECT_CICD_NUMBER: ${{ secrets.GCP_PROJECT_CICD_NUMBER }}
      GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
  deploy-dev:
    name: Dev Deploy
    uses: ./.github/workflows/deploy-service.yml
    permissions:
      contents: read
      id-token: write
    with:
      environment: dev
      tag: main:${{ github.sha }}
      APP_NAME: ${{ vars.APP_NAME }}
    secrets:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_PROJECT_CICD_ID: ${{ secrets.GCP_PROJECT_CICD_ID }}
      GCP_PROJECT_CICD_NUMBER: ${{ secrets.GCP_PROJECT_CICD_NUMBER }}
      GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
    needs: upload
